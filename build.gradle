buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

plugins {
    id 'kotlin-multiplatform' version '1.4.0'
    id 'jacoco'
}
repositories {
    mavenCentral()
}
group 'it.krzeminski'
version '0.2.0-beta'

apply plugin: 'maven-publish'
apply from: "$rootDir/ktlint.gradle"
apply from: "$rootDir/publishing.gradle"

kotlin {
    jvm()
    js {
        browser()
        nodejs()
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }
        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
            }
        }
        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }
        jsMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
            }
        }
        jsTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }
    }
}

jacoco {
    toolVersion = '0.8.3'
}

task jacocoTestReport(type: JacocoReport, dependsOn: jvmTest) {
    reports {
        xml.enabled true
        html.enabled true
    }
    afterEvaluate {
        getSourceDirectories().setFrom(files("$projectDir/src/commonMain/kotlin"))
        getClassDirectories().setFrom(files("$buildDir/classes/kotlin/jvm/main"))
        getExecutionData().setFrom(files("$buildDir/jacoco/jvmTest.exec"))
    }
}

check.dependsOn jacocoTestReport
